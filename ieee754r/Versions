libdfp {
  LIBDFP_1.0.0 {
    acosd32;
    acosd64;
    acosd128;
    acoshd32;
    acoshd64;
    acoshd128;
    asind32;
    asind64;
    asind128;
    asinhd32;
    asinhd64;
    asinhd128;
    atan2d32;
    atan2d64;
    atan2d128;
    atand32;
    atand64;
    atand128;
    atanhd32;
    atanhd64;
    atanhd128;
    cbrtd32;
    cbrtd64;
    cbrtd128;
    ceild32;
    ceild64;
    ceild128;
    copysignd32;
    copysignd64;
    copysignd128;
    cosd32;
    cosd64;
    cosd128;
    coshd32;
    coshd64;
    coshd128;
    erfd32;
    erfd64;
    erfd128;
    erfcd32;
    erfcd64;
    erfcd128;
    exp2d32;
    exp2d64;
    exp2d128;
    expd32;
    expd64;
    expd128;
    expm1d32;
    expm1d64;
    expm1d128;
    fabsd32;
    fabsd64;
    fabsd128;
    fdimd32;
    fdimd64;
    fdimd128;
    finited32;
    finited64;
    finited128;
    floord32;
    floord64;
    floord128;
    fmad32;
    fmad64;
    fmad128;
    fmaxd32;
    fmaxd64;
    fmaxd128;
    fmind32;
    fmind64;
    fmind128;
    fmodd32;
    fmodd64;
    fmodd128;
    fpclassifyd32;
    fpclassifyd64;
    fpclassifyd128;
    frexpd32;
    frexpd64;
    frexpd128;
    hypotd32;
    hypotd64;
    hypotd128;
    ilogbd32;
    ilogbd64;
    ilogbd128;
    isgreaterd32;
    isgreaterd64;
    isgreaterd128;
    isgreaterequald32;
    isgreaterequald64;
    isgreaterequald128;
    isinfd32;
    isinfd64;
    isinfd128;
    islessd32;
    islessd64;
    islessd128;
    islessequald32;
    islessequald64;
    islessequald128;
    islessgreaterd32;
    islessgreaterd64;
    islessgreaterd128;
    isnand32;
    isnand64;
    isnand128;
    isnormald32;
    isnormald64;
    isnormald128;
    isunorderedd32;
    isunorderedd64;
    isunorderedd128;
    ldexpd32;
    ldexpd64;
    ldexpd128;
    lgammad32;
    lgammad64;
    lgammad128;
    llrintd32;
    llrintd64;
    llrintd128;
    llroundd32;
    llroundd64;
    llroundd128;
    log10d32;
    log10d64;
    log10d128;
    log1pd32;
    log1pd64;
    log1pd128;
    log2d32;
    log2d64;
    log2d128;
    logbd32;
    logbd64;
    logbd128;
    logd32;
    logd64;
    logd128;
    lrintd32;
    lrintd64;
    lrintd128;
    lroundd32;
    lroundd64;
    lroundd128;
    modfd32;
    modfd64;
    modfd128;
    nand32;
    nand64;
    nand128;
    nearbyintd32;
    nearbyintd64;
    nearbyintd128;
    nextafterd32;
    nextafterd64;
    nextafterd128;
    nexttowardd32;
    nexttowardd64;
    nexttowardd128;
    powd32;
    powd64;
    powd128;
    quantized32;
    quantized64;
    quantized128;
    remainderd32;
    remainderd64;
    remainderd128;
    rintd32;
    rintd64;
    rintd128;
    roundd32;
    roundd64;
    roundd128;
    samequantumd32;
    samequantumd64;
    samequantumd128;
    scalblnd32;
    scalblnd64;
    scalblnd128;
    scalbnd32;
    scalbnd64;
    scalbnd128;
    signbitd32;
    signbitd64;
    signbitd128;
    sind32;
    sind64;
    sind128;
    sinhd32;
    sinhd64;
    sinhd128;
    sqrtd32;
    sqrtd64;
    sqrtd128;
    tand32;
    tand64;
    tand128;
    tanhd32;
    tanhd64;
    tanhd128;
    tgammad32;
    tgammad64;
    tgammad128;
    truncd32;
    truncd64;
    truncd128;
  }
  LIBDFP_1.0.2 {
    __isnand32;
    __isnand64;
    __isnand128;
    __isinfd32;
    __isinfd64;
    __isinfd128;
  }
  LIBDFP_1.0.3 {
    # finited* and friends is deprecated but at some point we published math.h
    # with polymorphic isfinite() pointing to them so keep them around.  They
    # are just aliases.
    __finited32;
    __finited64;
    __finited128;
    isfinited32;
    isfinited64;
    isfinited128;
    __isfinited32;
    __isfinited64;
    __isfinited128;
    # Polymorphic signbit support.
    __signbitd32;
    __signbitd64;
    __signbitd128;
    __fabsd32;
    __fabsd64;
    __fabsd128;
    __fpclassifyd32;
    __fpclassifyd64;
    __fpclassifyd128;
  }
  LIBDFP_1.0.9 {
    issignalingd32;
    __issignalingd32;
    issignalingd64;
    __issignalingd64;
    issignalingd128;
    __issignalingd128;
    llogbd32;
    llogbd64;
    llogbd128;
    llquantexpd32;
    llquantexpd64;
    llquantexpd128;
    roundevend32;
    roundevend64;
    roundevend128;
    quantumd32;
    quantumd64;
    quantumd128;
  }
  LIBDFP_1.0.15 {
    fmaxmagd32;
    fmaxmagd64;
    fmaxmagd128;
  }
}
